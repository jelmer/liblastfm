Description: Don't leak QNetworkReplies in Audioscrobbler
Author: MatÄ›j Laitl <matej@laitl.cz>
Origin: https://github.com/strohel/liblastfm/commit/df2f6f45224e03a9d3f70a86aa4fed751bf9ab50
diff --git a/src/Audioscrobbler.cpp b/src/Audioscrobbler.cpp
index cb3f40a..3f035cb 100644
--- a/src/Audioscrobbler.cpp
+++ b/src/Audioscrobbler.cpp
@@ -165,9 +165,6 @@ lastfm::Audioscrobbler::onNowPlayingReturn()
             d->parseTrack( lfm["nowplaying"], d->m_nowPlayingTrack );
         else
             emit nowPlayingError( lfm["error"].attribute("code").toInt(), lfm["error"].text() );
-
-        d->m_nowPlayingTrack = Track();
-        d->m_nowPlayingReply = 0;
     }
     else
     {
@@ -175,6 +172,7 @@ lastfm::Audioscrobbler::onNowPlayingReturn()
     }
 
     d->m_nowPlayingTrack = Track();
+    d->m_nowPlayingReply->deleteLater();
     d->m_nowPlayingReply = 0;
 }
 
@@ -228,6 +226,7 @@ lastfm::Audioscrobbler::onTrackScrobbleReturn()
             }
         }
 
+        d->m_scrobbleReply->deleteLater();
         d->m_scrobbleReply = 0;
 
         // check is there are anymore scrobbles to submit
@@ -236,6 +235,7 @@ lastfm::Audioscrobbler::onTrackScrobbleReturn()
     else
     {
         qDebug() << lfm.parseError().message() << lfm.parseError().enumValue();
+        d->m_scrobbleReply->deleteLater();
         d->m_scrobbleReply = 0;
     }
 }
